var L=Object.defineProperty;var A=(n,t,r)=>t in n?L(n,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):n[t]=r;var u=(n,t,r)=>(A(n,typeof t!="symbol"?t+"":t,r),r);import{d as P,n as W,r as X,u as C,_ as Y,o as F,c as G,a as K}from"./index.c9ddb6cf.js";import{r as Q,d as Z}from"./RenderUtils.1dc0c613.js";import{v as J,a as tt,d as y,b as D,c as T,e as R,f as w,g as N}from"./Vectors.edfcf4f8.js";class M{constructor(t,r){this.m_origin=t,this.m_direction=r}get origin(){return this.m_origin}get direction(){return this.m_direction}setDirection(t){this.m_direction=t}setOrigin(t){this.m_origin=t}at(t){return J(this.m_origin,tt(this.m_direction,t))}}class et{constructor(t,r){u(this,"yaw",90);u(this,"pitch",0);u(this,"speed",.01);u(this,"sensitivity",.3);u(this,"zoom",45);u(this,"cameraData",null);u(this,"front",null);u(this,"right",null);u(this,"up",null);u(this,"worldUp",null);u(this,"canvasData",null);this.worldUp=r.up,this.cameraData=r,this.canvasData=t,this.updateCameraVectors()}shootRay(t,r){let g=2*t/this.canvasData.width-1;const _=1-2*r/this.canvasData.height,c=this.canvasData.width/this.canvasData.height;g=g*c;const p=[g*Math.tan(y(this.zoom/2)),_*Math.tan(y(this.zoom/2)),-1],v=[p[0]*this.right[0]+p[1]*this.up[0]+p[2]*this.front[0],p[0]*this.right[1]+p[1]*this.up[1]+p[2]*this.front[1],p[0]*this.right[2]+p[1]*this.up[2]+p[2]*this.front[2]],j=D(v),b=this.cameraData.position;return new M(b,j)}updateCameraVectors(){let t=[0,0,0];t[0]=Math.cos(y(this.yaw))*Math.cos(y(this.pitch)),t[1]=Math.sin(y(this.pitch)),t[2]=Math.sin(y(this.yaw))*Math.cos(y(this.pitch)),this.front=D(t),this.right=D(T(this.front,this.worldUp)),this.up=D(T(this.right,this.front)),this.cameraData.target=R(this.cameraData.position,this.front)}}const it={category:"Raytracing",name:"HitObjects",buttonContent:"\u67E5\u770B\u6E90\u7801",title:"Hit Objects",content:"Let`s hit some objects."},at=P({name:"HitObjects",components:{nano_raytracing_page:W},setup(){const n=X();let t,r,g,_={target:[0,0,0],position:[.5,.5,1],up:[0,-1,0]},c={circleCol:[255,0,0],circleCenter:[50,50,0],radius:10,objectType:0};const p=["Sphere","Box","Cylinder"];let v;const j=()=>{t=n.value.getCanvas(),r=n.value.getContext(),r?g=r.createImageData(t.width,t.height):console.log("context not found!"),n.value.addUIItem({type:"select",id:"objectType",default:c.objectType,value:p,callback:C.globalUiCallbacks.updateValue(c,b,"objectType")}),n.value.addUIItem({type:"slider-vector",id:"circleCol",value:c.circleCol,min:{0:0,1:0,2:0},max:{0:255,1:255,2:255},callback:C.globalUiCallbacks.updateVector3(c,n.value.Render,"circleCol")}),n.value.addUIItem({type:"slider-vector",id:"circleCenter",value:c.circleCenter,min:{0:0,1:0,2:0},max:{0:100,1:100,2:100},callback:C.globalUiCallbacks.updateVector3(c,n.value.Render,"circleCenter")}),n.value.addUIItem({type:"slider",id:"radius",value:c.radius,min:0,max:100,callback:C.globalUiCallbacks.updateVector3(c,n.value.Render,"radius")})},b=()=>{Q(t);const I=t.width,k=t.height,V=JSON.parse(JSON.stringify(c.circleCol)),O=JSON.parse(JSON.stringify(c.circleCenter));Object.keys(O).forEach(o=>{O[o]/=100});const x=JSON.parse(JSON.stringify(c.radius))/100,B=(o,s,i,e,a)=>{const l=[255,255,255],h=[.5*255,.7*255,255];let d=0;return c.objectType==0?d=H(e,a,o):c.objectType==1?d=$(e,J(e,[a,a,a]),o):c.objectType==2&&(d=E(e,a,.3,o)),d!=-1?i:[l[0]*(1-s)+h[0]*s,l[1]*(1-s)+h[1]*s,l[2]*(1-s)+h[2]*s]},H=(o,s,i)=>{let e=R(i.origin,o),a=w(i.direction),l=2*N(e,i.direction),h=w(e)-s*s,d=l*l-4*a*h;return d<0?-1:(-l-Math.sqrt(d))/(2*a)},$=(o,s,i)=>{let e=(o[0]-i.origin[0])/i.direction[0],a=(s[0]-i.origin[0])/i.direction[0];if(e>a){let f=e;e=a,a=f}let l=(o[1]-i.origin[1])/i.direction[1],h=(s[1]-i.origin[1])/i.direction[1];if(l>h){let f=l;l=h,h=f}if(e>h||l>a)return-1;l>e&&(e=l),h<a&&(a=h);let d=(o[2]-i.origin[2])/i.direction[2],m=(s[2]-i.origin[2])/i.direction[2];if(d>m){let f=d;d=m,m=f}return e>m||d>a?-1:(d>e&&(e=d),m<a&&(a=m),e)},E=(o,s,i,e)=>{let a=R(e.origin,o),l=w(e.direction)-e.direction[1]*e.direction[1],h=2*(N(a,e.direction)-a[1]*e.direction[1]),d=w(a)-a[1]*a[1]-s*s,m=h*h-4*l*d;if(m<0)return-1;let f=(-h-Math.sqrt(m))/(2*l),z=e.origin[1]+f*e.direction[1];return z<o[1]||z>o[1]+i?-1:f};v=new et({width:I,height:k},_);const q=1/I;let S=[],U=new M(origin,origin);for(let o=0;o<I;o++){let s=(o+.5)*q;for(let i=0;i<k;i++)U=v.shootRay(o,i),S=B(U,s,V,O,x),Z(g,o,i,S)}r==null||r.putImageData(g,0,0)};return{desData:it,page:n,Render:b,Init:j}}});function nt(n,t,r,g,_,c){const p=K("nano_raytracing_page");return F(),G(p,{prop_des_data:n.desData,onInit:n.Init,onRender:n.Render,ref:"page"},null,8,["prop_des_data","onInit","onRender"])}const lt=Y(at,[["render",nt]]);export{lt as default};
